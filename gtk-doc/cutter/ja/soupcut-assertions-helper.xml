<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="cutter-soupcut-assertions-helper">
<refmeta>
<refentrytitle role="top_of_page" id="cutter-soupcut-assertions-helper.top_of_page">soupcut-assertions-helper</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>Cutterライブラリ</refmiscinfo>
</refmeta>
<refnamediv>
<refname>soupcut-assertions-helper</refname>
<refpurpose/>
</refnamediv>

<refsynopsisdiv id="cutter-soupcut-assertions-helper.synopsis" role="synopsis">
<title role="synopsis.title">概要</title>

<synopsis><link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="soupcut-message-assert-equal-content-type-helper">soupcut_message_assert_equal_content_type_helper</link>
                                                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *expected</parameter>,
                                                         <parameter><link linkend="SoupMessage"><type>SoupMessage</type></link> *message</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_expected</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_message</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="soupcut-client-assert-equal-content-type-helper">soupcut_client_assert_equal_content_type_helper</link>
                                                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *expected</parameter>,
                                                         <parameter><link linkend="SoupCutClient"><type>SoupCutClient</type></link> *client</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_expected</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_client</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="soupcut-client-assert-response-helper">soupcut_client_assert_response_helper</link>
                                                        (<parameter><link linkend="SoupCutClient"><type>SoupCutClient</type></link> *client</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_client</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="soupcut-client-assert-equal-body-helper">soupcut_client_assert_equal_body_helper</link>
                                                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *expected</parameter>,
                                                         <parameter><link linkend="SoupCutClient"><type>SoupCutClient</type></link> *client</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_expected</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_client</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="soupcut-client-assert-match-body-helper">soupcut_client_assert_match_body_helper</link>
                                                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *pattern</parameter>,
                                                         <parameter><link linkend="SoupCutClient"><type>SoupCutClient</type></link> *client</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_pattern</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_client</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="cutter-soupcut-assertions-helper.description" role="desc">
<title role="desc.title">説明</title>
<para>
</para>
</refsect1>
<refsect1 id="cutter-soupcut-assertions-helper.details" role="details">
<title role="details.title">詳細</title>
<refsect2 id="soupcut-message-assert-equal-content-type-helper" role="function">
<title>soupcut_message_assert_equal_content_type_helper ()</title>
<indexterm zone="soupcut-message-assert-equal-content-type-helper"><primary>soupcut_message_assert_equal_content_type_helper</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                soupcut_message_assert_equal_content_type_helper
                                                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *expected</parameter>,
                                                         <parameter><link linkend="SoupMessage"><type>SoupMessage</type></link> *message</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_expected</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_message</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>expected</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expression_expected</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expression_message</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="soupcut-client-assert-equal-content-type-helper" role="function">
<title>soupcut_client_assert_equal_content_type_helper ()</title>
<indexterm zone="soupcut-client-assert-equal-content-type-helper"><primary>soupcut_client_assert_equal_content_type_helper</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                soupcut_client_assert_equal_content_type_helper
                                                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *expected</parameter>,
                                                         <parameter><link linkend="SoupCutClient"><type>SoupCutClient</type></link> *client</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_expected</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_client</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>expected</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expression_expected</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expression_client</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="soupcut-client-assert-response-helper" role="function">
<title>soupcut_client_assert_response_helper ()</title>
<indexterm zone="soupcut-client-assert-response-helper"><primary>soupcut_client_assert_response_helper</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                soupcut_client_assert_response_helper
                                                        (<parameter><link linkend="SoupCutClient"><type>SoupCutClient</type></link> *client</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_client</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>client</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expression_client</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="soupcut-client-assert-equal-body-helper" role="function">
<title>soupcut_client_assert_equal_body_helper ()</title>
<indexterm zone="soupcut-client-assert-equal-body-helper"><primary>soupcut_client_assert_equal_body_helper</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                soupcut_client_assert_equal_body_helper
                                                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *expected</parameter>,
                                                         <parameter><link linkend="SoupCutClient"><type>SoupCutClient</type></link> *client</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_expected</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_client</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>expected</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expression_expected</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expression_client</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="soupcut-client-assert-match-body-helper" role="function">
<title>soupcut_client_assert_match_body_helper ()</title>
<indexterm zone="soupcut-client-assert-match-body-helper"><primary>soupcut_client_assert_match_body_helper</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                soupcut_client_assert_match_body_helper
                                                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *pattern</parameter>,
                                                         <parameter><link linkend="SoupCutClient"><type>SoupCutClient</type></link> *client</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_pattern</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *expression_client</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pattern</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expression_pattern</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expression_client</parameter> :</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
